{
  "openapi": "3.1.0",
  "info": {
    "title": "WarmHouse API",
    "description": "Gateway for splatform",
    "version": "2.0"
  },
  "paths": {
    "/api/v2.0/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List Users",
        "operationId": "list_users",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  },
                  "type": "array",
                  "title": "Response List Users Api V2 0 Users  Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User",
        "operationId": "get_user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User",
        "operationId": "update_user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete User",
        "operationId": "delete_user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register User",
        "operationId": "register_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/homes/": {
      "get": {
        "tags": [
          "Homes"
        ],
        "summary": "List Homes",
        "operationId": "list_homes",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/HomeResponse"
                  },
                  "type": "array",
                  "title": "Response List Homes Api V2 0 Homes  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Homes"
        ],
        "summary": "Create Home",
        "operationId": "create_home",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/homes/{home_id}": {
      "get": {
        "tags": [
          "Homes"
        ],
        "summary": "Get Home",
        "operationId": "get_home",
        "parameters": [
          {
            "name": "home_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Home Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Homes"
        ],
        "summary": "Update Home",
        "operationId": "update_home",
        "parameters": [
          {
            "name": "home_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Home Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HomeBase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Homes"
        ],
        "summary": "Delete Home",
        "operationId": "delete_home",
        "parameters": [
          {
            "name": "home_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Home Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/sensors/": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "List Devices",
        "operationId": "list_devices",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DeviceResponse"
                  },
                  "type": "array",
                  "title": "Response List Devices Api V2 0 Sensors  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Create Device",
        "operationId": "create_device",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/sensors/{device_id}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Get Device",
        "operationId": "get_device",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Devices"
        ],
        "summary": "Update Device",
        "operationId": "update_device",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceBase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "summary": "Delete Device",
        "operationId": "delete_device",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/sensors/activate": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Activate Device",
        "operationId": "activate_device",
        "parameters": [
          {
            "name": "activation_code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Activation Code"
            }
          },
          {
            "name": "home_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Home Id"
            }
          },
          {
            "name": "room_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Room Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/sensor-data/": {
      "get": {
        "tags": [
          "SensorData"
        ],
        "summary": "List Sensor Data",
        "operationId": "list_sensor_data",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SensorDataResponse"
                  },
                  "type": "array",
                  "title": "Response List Sensor Data Api V2 0 Sensor Data  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SensorData"
        ],
        "summary": "Create Sensor Data",
        "operationId": "create_sensor_data",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SensorDataBase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/sensor-data/{data_id}": {
      "get": {
        "tags": [
          "SensorData"
        ],
        "summary": "Get Sensor Data",
        "operationId": "get_sensor_data",
        "parameters": [
          {
            "name": "data_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Data Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SensorData"
        ],
        "summary": "Delete Sensor Data",
        "operationId": "delete_sensor_data",
        "parameters": [
          {
            "name": "data_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Data Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/automation-scenarios/": {
      "get": {
        "tags": [
          "AutomationScenarios"
        ],
        "summary": "List Scenarios",
        "operationId": "list_scenarios",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ScenarioResponse"
                  },
                  "type": "array",
                  "title": "Response List Scenarios Api V2 0 Automation Scenarios  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AutomationScenarios"
        ],
        "summary": "Create Scenario",
        "operationId": "create_scenario",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioWithRulesCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioWithRulesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2.0/automation-scenarios/{scenario_id}": {
      "get": {
        "tags": [
          "AutomationScenarios"
        ],
        "summary": "Get Scenario",
        "operationId": "get_scenario",
        "parameters": [
          {
            "name": "scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Scenario Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioWithRulesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AutomationScenarios"
        ],
        "summary": "Update Scenario",
        "operationId": "update_scenario",
        "parameters": [
          {
            "name": "scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Scenario Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScenarioBase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AutomationScenarios"
        ],
        "summary": "Delete Scenario",
        "operationId": "delete_scenario",
        "parameters": [
          {
            "name": "scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Scenario Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActionType": {
        "type": "string",
        "enum": [
          "TURN_ON",
          "TURN_OFF"
        ],
        "title": "ActionType"
      },
      "DeviceBase": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/DeviceType"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "firmwareVersion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "homeId": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Home Id"
          },
          "activationCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activation Code"
          },
          "isActivated": {
            "type": "boolean",
            "title": "Is Activated",
            "default": false
          },
          "activatedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "model"
        ],
        "title": "DeviceBase"
      },
      "DeviceResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/DeviceType"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "firmwareVersion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firmware Version"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "homeId": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Home Id"
          },
          "activationCode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activation Code"
          },
          "isActivated": {
            "type": "boolean",
            "title": "Is Activated",
            "default": false
          },
          "activatedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activated At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "model",
          "id"
        ],
        "title": "DeviceResponse"
      },
      "DeviceType": {
        "type": "string",
        "enum": [
          "SENSOR",
          "CAMERA",
          "SWITCH"
        ],
        "title": "DeviceType"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HomeBase": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "ownerId": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "owner_id"
        ],
        "title": "HomeBase"
      },
      "HomeResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "ownerId": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "owner_id",
          "id"
        ],
        "title": "HomeResponse"
      },
      "RuleBase": {
        "properties": {
          "scenarioId": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scenario Id"
          },
          "triggerType": {
            "$ref": "#/components/schemas/TriggerType"
          },
          "triggerCondition": {
            "type": "string",
            "title": "Trigger Condition"
          },
          "actionType": {
            "$ref": "#/components/schemas/ActionType"
          },
          "actionTarget": {
            "type": "string",
            "format": "uuid",
            "title": "Action Target"
          }
        },
        "type": "object",
        "required": [
          "trigger_type",
          "trigger_condition",
          "action_type",
          "action_target"
        ],
        "title": "RuleBase"
      },
      "RuleResponse": {
        "properties": {
          "scenarioId": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scenario Id"
          },
          "triggerType": {
            "$ref": "#/components/schemas/TriggerType"
          },
          "triggerCondition": {
            "type": "string",
            "title": "Trigger Condition"
          },
          "actionType": {
            "$ref": "#/components/schemas/ActionType"
          },
          "actionTarget": {
            "type": "string",
            "format": "uuid",
            "title": "Action Target"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "trigger_type",
          "trigger_condition",
          "action_type",
          "action_target",
          "id"
        ],
        "title": "RuleResponse"
      },
      "ScenarioBase": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "user_id"
        ],
        "title": "ScenarioBase"
      },
      "ScenarioResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "user_id",
          "id",
          "created_at"
        ],
        "title": "ScenarioResponse"
      },
      "ScenarioWithRulesCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": true
          },
          "rules": {
            "items": {
              "$ref": "#/components/schemas/RuleBase"
            },
            "type": "array",
            "title": "Rules"
          }
        },
        "type": "object",
        "required": [
          "name",
          "user_id",
          "rules"
        ],
        "title": "ScenarioWithRulesCreate"
      },
      "ScenarioWithRulesResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "rules": {
            "items": {
              "$ref": "#/components/schemas/RuleResponse"
            },
            "type": "array",
            "title": "Rules"
          }
        },
        "type": "object",
        "required": [
          "name",
          "user_id",
          "id",
          "created_at",
          "rules"
        ],
        "title": "ScenarioWithRulesResponse"
      },
      "SensorDataBase": {
        "properties": {
          "deviceId": {
            "type": "string",
            "format": "uuid",
            "title": "Device Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "device_id",
          "timestamp",
          "type",
          "value"
        ],
        "title": "SensorDataBase"
      },
      "SensorDataResponse": {
        "properties": {
          "deviceId": {
            "type": "string",
            "format": "uuid",
            "title": "Device Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "device_id",
          "timestamp",
          "type",
          "value",
          "id"
        ],
        "title": "SensorDataResponse"
      },
      "TriggerType": {
        "type": "string",
        "enum": [
          "SENSOR",
          "TIME"
        ],
        "title": "TriggerType"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          }
        },
        "type": "object",
        "required": [
          "email",
          "name"
        ],
        "title": "UserCreate"
      },
      "UserResponse": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "registeredAt": {
            "type": "string",
            "format": "date-time",
            "title": "Registered At"
          }
        },
        "type": "object",
        "required": [
          "email",
          "name",
          "id",
          "registered_at"
        ],
        "title": "UserResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}