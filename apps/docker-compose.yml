version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: smarthome-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./smart_home/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - smarthome-network
  app:
    build:
      context: ./smart_home
      dockerfile: Dockerfile
    container_name: smarthome-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - TEMPERATURE_API_URL=${TEMPERATURE_API_URL}
  #  ports:
  #    - "8080:8080"
    restart: unless-stopped
    networks:
      - smarthome-network
  temperature-api:
    build:
      context: ./temperature-api
    container_name: temperature-api
    ports:
      - "8081:8080"
    restart: unless-stopped
    networks:
      - smarthome-network
  device-service:
    build:
      context: ./device_service
      dockerfile: Dockerfile
    container_name: device-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "8008:8080"
    restart: unless-stopped
    networks:
      - smarthome-network
  telemetry-service:
    build:
      context: ./telemetry_service
      dockerfile: Dockerfile
    container_name: telemetry-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "8009:8000"
    restart: unless-stopped
    networks:
      - smarthome-network
  proxy-service:
    build: ./proxy_service
    ports:
      - "8080:8080"
    depends_on:
      - app
      - telemetry-service
    networks:
     - smarthome-network
volumes:
  postgres_data:

networks:
  smarthome-network:
    driver: bridge
